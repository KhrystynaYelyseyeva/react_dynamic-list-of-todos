{"version":3,"sources":["components/Button/Button.js","components/TodoList/TodoList.jsx","shapes/TodoShape.js","api.js","components/CurrentUser/CurrentUser.jsx","components/Form/Form.js","App.jsx","index.js"],"names":["Button","className","onClick","content","type","defaultProps","TodoList","PropTypes","shape","id","number","isRequired","userId","title","string","completed","bool","todos","getUserId","selectedUserId","map","todo","classNames","key","checked","readOnly","fetchWithTimeout","url","options","a","timeout","controller","AbortController","setTimeout","abort","fetch","signal","response","clearTimeout","loadTodos","json","data","todosData","loadUser","user","userData","CurrentUser","state","userNoFoundError","getUser","props","handleShowUser","handleShowError","setState","this","prevProps","name","email","phone","PureComponent","Form","search","filter","handleChange","htmlFor","placeholder","value","onChange","App","event","target","regular","RegExp","preparedTodos","test","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1a43205.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ className, onClick, content }) => (\n  <button\n    className={className}\n    type=\"button\"\n    onClick={onClick}\n  >\n    {content}\n  </button>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nButton.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { Button } from '../Button/Button';\nimport { TodoShape } from '../../shapes/TodoShape';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, getUserId, selectedUserId }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={\n              classNames(\n                'TodoList__item',\n                { 'TodoList__item--unchecked': !todo.completed },\n                { 'TodoList__item--checked': todo.completed },\n              )}\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <Button\n              className={\n                classNames(\n                  'TodoList__user-button',\n                  'button',\n                  {\n                    'TodoList__user-button--selected':\n                      todo.userId === selectedUserId,\n                  },\n                )\n              }\n              type=\"button\"\n              onClick={() => getUserId(todo.userId)}\n              content={`User #${todo.userId}`}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  getUserId: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n}).isRequired;\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nconst fetchWithTimeout = async(url, options) => {\n  const { timeout = 8000 } = options;\n\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeout);\n\n  const response = await fetch(url, {\n    ...options,\n    signal: controller.signal,\n  });\n\n  clearTimeout(id);\n\n  return response;\n};\n\nexport const loadTodos = async() => {\n  const response = await fetchWithTimeout(TODOS_URL, {\n    timeout: 800,\n  });\n  const todos = await response.json();\n  const todosData = await todos.data;\n\n  return todosData;\n};\n\nexport const loadUser = async(userId) => {\n  const response = await fetchWithTimeout(`${USERS_URL}${userId}`, {\n    timeout: 800,\n  });\n  const user = await response.json();\n  const userData = await user.data;\n\n  return userData;\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { loadUser } from '../../api';\nimport { Button } from '../Button/Button';\n\nexport class CurrentUser extends PureComponent {\n  state = {\n    user: {},\n    userNoFoundError: false,\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selectedUserId !== prevProps.selectedUserId) {\n      this.getUser();\n    }\n  }\n\n  getUser = async() => {\n    try {\n      const user = await loadUser(this.props.selectedUserId);\n\n      this.handleShowUser(user);\n    } catch (error) {\n      this.handleShowError();\n    }\n  }\n\n  handleShowUser = (user) => {\n    this.setState({\n      user,\n      userNoFoundError: false,\n    });\n  }\n\n  handleShowError = () => {\n    this.setState({\n      userNoFoundError: true,\n    });\n  }\n\n  render() {\n    const { user, userNoFoundError } = this.state;\n    const { getUserId } = this.props;\n\n    if (userNoFoundError) {\n      return (\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            No user with current id\n          </span>\n        </h2>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:&nbsp;\n            {user.id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <Button\n          onClick={() => getUserId(0)}\n          className=\"CurrentUser__button button\"\n          content=\"Clear\"\n        />\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  selectedUserId: PropTypes.number.isRequired,\n  getUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ search, filter, handleChange }) => (\n  <form className=\"Form\">\n    <label htmlFor=\"search\">\n      <input\n        className=\"Form__input\"\n        name=\"search\"\n        id=\"search\"\n        type=\"search\"\n        placeholder=\"Search\"\n        value={search}\n        onChange={handleChange}\n      />\n    </label>\n    <label htmlFor=\"filter\">\n      <select\n        className=\"Form__select\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      >\n        <option value=\"all\">\n          All\n        </option>\n        <option value=\"active\">\n          Active\n        </option>\n        <option value=\"completed\">\n          Completed\n        </option>\n      </select>\n    </label>\n  </form>\n);\n\nForm.propTypes = {\n  filter: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { Form } from './components/Form/Form';\nimport { loadTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    search: '',\n    filter: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await loadTodos();\n\n    this.setState({ todos });\n  }\n\n  getUserId = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId, search, filter } = this.state;\n    const regular = new RegExp(search, 'gim');\n    const preparedTodos = todos.filter(({ title }) => (\n      regular.test(title)\n    ))\n      .filter(({ completed }) => {\n        switch (filter) {\n          case 'all':\n            return true;\n          case 'active':\n            return !completed;\n          case 'completed':\n            return completed;\n          default:\n            return true;\n        }\n      });\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__form\">\n          <Form\n            search={search}\n            filter={filter}\n            handleChange={this.handleChange}\n          />\n        </div>\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={preparedTodos}\n            getUserId={this.getUserId}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                getUserId={this.getUserId}\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}